{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducer } from \"./reducer/productreducer\";\nimport authReducer from \"./redux/authReduc\";\nimport cartReducer from \"./redux/cartReducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage/session';\n// Combine your reducers\nconst rootReducer = combineReducers({\n  products: productReducer,\n  auth: authReducer,\n  cart: cartReducer\n});\nconst persistConfig = {\n  key: \"root\",\n  storage // Specify the storage mechanism\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(persistedReducer,\n// Use persisted reducer\ninitialState, composeWithDevTools(applyMiddleware(...middleware)));\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducer","authReducer","cartReducer","configureStore","persistStore","persistReducer","storage","rootReducer","products","auth","cart","persistConfig","key","persistedReducer","initialState","middleware","store","persistor"],"sources":["C:/Users/anish/OneDrive/Desktop/scratch/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { productReducer } from \"./reducer/productreducer\";\r\nimport authReducer from \"./redux/authReduc\";\r\nimport cartReducer from \"./redux/cartReducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage/session';\r\n// Combine your reducers\r\nconst rootReducer = combineReducers({\r\n  products: productReducer,\r\n  auth: authReducer,\r\n  cart: cartReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage, // Specify the storage mechanism\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  persistedReducer, // Use persisted reducer\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,cAAc,QAAQ,0BAA0B;AACzD,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,mCAAmC;AACvD;AACA,MAAMC,WAAW,GAAGX,eAAe,CAAC;EAClCY,QAAQ,EAAER,cAAc;EACxBS,IAAI,EAAER,WAAW;EACjBS,IAAI,EAAER;AACR,CAAC,CAAC;AAEF,MAAMS,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXN,OAAO,CAAE;AACX,CAAC;;AAED,MAAMO,gBAAgB,GAAGR,cAAc,CAACM,aAAa,EAAEJ,WAAW,CAAC;AAEnE,MAAMO,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAMC,UAAU,GAAG,CAACjB,KAAK,CAAC;AAE1B,MAAMkB,KAAK,GAAGrB,WAAW,CACvBkB,gBAAgB;AAAE;AAClBC,YAAY,EACZf,mBAAmB,CAACF,eAAe,CAAC,GAAGkB,UAAU,CAAC,CACpD,CAAC;AAED,MAAME,SAAS,GAAGb,YAAY,CAACY,KAAK,CAAC;AAErC,SAASA,KAAK,EAAEC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}